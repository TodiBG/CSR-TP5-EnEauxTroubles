

Installatiom de l’application :
La compilation des fichier sources et la génération du JAR de l'application se fera à travers l'outil maven.
Si vous avez besoin de l'installer, rendez-vous à l'adresse https://maven.apache.org/.
Une fois maven installé, ouvrez le fichier 'pom.xml' et notez les dépendances. C'est le moment d'utiliser la ligne de commande.
Pour générer le JAR de l'application, allez à la racine du projet (là où se trouve le fichier 'pom.xml') et entrez la
commande `mvn package`. Vous venez de créer le JAR de l'application, qui doit se trouver dans un nouveau répertoire 'target'.
Vous pouvez lancer le serveur avec la commande `java -jar uber-mta-0.0.1.jar` lancée depuis l'intérieur du répertoire 'target'.
Le serveur doit maintenant tourner, et être prêt à recevoir vos requêtes.

Nous avons dejà lancé la commande 'mvn package' pour générer les fichier jar. Vous pouvez tout simplement lancer
le serveur avec  la commande java -jar uber-mta-0.0.1.jar.

Le serveur doit maintenant tourner, et être prêt à recevoir vos requêtes.
Essayons les requêtes suivantes, que vous pouvez lancer depuis un autre
terminal:

Pour récupérer la liste des zone
    http://localhost:8124/zones
Pour récupérer les informations d'une zone (présence ou absence d'un requin, nombre de sardines restantes) :
    curl http://localhost:8124/zones/{zone_id}
Pour récupérer le nombre de requins encore présents dans la simulation :
    curl http://localhost:8124/sharks
Pour demarrer un requin dans une zone de façaon aléatoire taper cette command :
   curl -X POST -H "Content-type:application/json" -H "Accept:application/json" -d "{ \"vie\":30}" http://localhost:8124/sharks
Pour récupérer la position d'un requin et son temps de vie restant:
    curl http://localhost:8124/{shark_id}
Pour récupérer le nombre global de sardines restantes
    curl http://localhost:8124/tunas

